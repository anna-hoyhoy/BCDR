trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  TF_VERSION: 'latest'
  TF_WORKING_DIR: 'terraform'  # Adjust this path if needed

steps:
- task: TerraformInstaller@1
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: '$(TF_VERSION)'
- task: TerraformTaskV4@4
  displayName: Terraform Init
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'BCDR_Project_Connection'
    backendAzureRmResourceGroupName: 'RG_GSU_BCDR'
    backendAzureRmStorageAccountName: 'storagebcdr'
    backendAzureRmContainerName: 'bcdrcontainer'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTaskV4@4
  displayName: Terraform Plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'BCDR_Project_Connection'
  
- task: TerraformTaskV4@4 
  displayName: Terraform Apply
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'BCDR_Project_Connection'
  
- task: PublishPipelineArtifact@1
  displayName: 'Publish pipeline artifact'
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
        artifact: 'prod'
    ${{ else }}:
        artifact: 'dev'
    publishLocation: 'pipeline'